[1m[1;34mEnumerable#methods[0m[0m: 
  chain           each_cons         entries     grep      max_by     reduce        tally
  chunk           each_entry        filter_map  grep_v    member?    slice_after 
  chunk_while     each_slice        find        group_by  min_by     slice_before
  collect_concat  each_with_index   find_all    inject    minmax_by  slice_when  
  detect          each_with_object  flat_map    lazy      partition  sort_by     
[1m[1;34mArray#methods[0m[0m: 
  &              clear        drop_while  insert        pop                   rotate     take      
  *              collect      each        inspect       prepend               rotate!    take_while
  +              collect!     each_index  intersection  pretty_print          sample     to_a      
  -              combination  empty?      join          pretty_print_cycle    select     to_ary    
  <<             compact      eql?        keep_if       product               select!    to_h      
  <=>            compact!     fetch       last          push                  shelljoin  to_s      
  ==             concat       fill        length        rassoc                shift      transpose 
  []             count        filter      map           reject                shuffle    union     
  []=            cycle        filter!     map!          reject!               shuffle!   uniq      
  all?           deconstruct  find_index  max           repeated_combination  size       uniq!     
  any?           delete       first       min           repeated_permutation  slice      unshift   
  append         delete_at    flatten     minmax        replace               slice!     values_at 
  assoc          delete_if    flatten!    none?         reverse               sort       zip       
  at             difference   hash        one?          reverse!              sort!      |         
  bsearch        dig          include?    pack          reverse_each          sort_by! 
  bsearch_index  drop         index       permutation   rindex                sum      
[1m[1;34mself.methods[0m[0m: __pry__
[1m[1;34mlocals[0m[0m: _  __  _dir_  _ex_  _file_  _in_  _out_  pry_instance
